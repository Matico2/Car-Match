// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import androidx.viewpager.widget.ViewPager;
import com.example.carmatch1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityDetailsVehicleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnDeleteVehicle;

  @NonNull
  public final Button btnEditVehicle;

  @NonNull
  public final ToolbarAppBinding includeMainToolbar;

  @NonNull
  public final TextView txtBrandModel;

  @NonNull
  public final TextView txtDescription;

  @NonNull
  public final TextView txtDescriptionLabel;

  @NonNull
  public final TextView txtKmCondition;

  @NonNull
  public final TextView txtPlate;

  @NonNull
  public final TextView txtPrice;

  @NonNull
  public final TextView txtType;

  @NonNull
  public final TextView txtYearFuel;

  @NonNull
  public final ViewPager viewPagerImages;

  private ActivityDetailsVehicleBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button btnDeleteVehicle, @NonNull Button btnEditVehicle,
      @NonNull ToolbarAppBinding includeMainToolbar, @NonNull TextView txtBrandModel,
      @NonNull TextView txtDescription, @NonNull TextView txtDescriptionLabel,
      @NonNull TextView txtKmCondition, @NonNull TextView txtPlate, @NonNull TextView txtPrice,
      @NonNull TextView txtType, @NonNull TextView txtYearFuel,
      @NonNull ViewPager viewPagerImages) {
    this.rootView = rootView;
    this.btnDeleteVehicle = btnDeleteVehicle;
    this.btnEditVehicle = btnEditVehicle;
    this.includeMainToolbar = includeMainToolbar;
    this.txtBrandModel = txtBrandModel;
    this.txtDescription = txtDescription;
    this.txtDescriptionLabel = txtDescriptionLabel;
    this.txtKmCondition = txtKmCondition;
    this.txtPlate = txtPlate;
    this.txtPrice = txtPrice;
    this.txtType = txtType;
    this.txtYearFuel = txtYearFuel;
    this.viewPagerImages = viewPagerImages;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityDetailsVehicleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityDetailsVehicleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_details_vehicle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityDetailsVehicleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnDeleteVehicle;
      Button btnDeleteVehicle = ViewBindings.findChildViewById(rootView, id);
      if (btnDeleteVehicle == null) {
        break missingId;
      }

      id = R.id.btnEditVehicle;
      Button btnEditVehicle = ViewBindings.findChildViewById(rootView, id);
      if (btnEditVehicle == null) {
        break missingId;
      }

      id = R.id.includeMainToolbar;
      View includeMainToolbar = ViewBindings.findChildViewById(rootView, id);
      if (includeMainToolbar == null) {
        break missingId;
      }
      ToolbarAppBinding binding_includeMainToolbar = ToolbarAppBinding.bind(includeMainToolbar);

      id = R.id.txtBrandModel;
      TextView txtBrandModel = ViewBindings.findChildViewById(rootView, id);
      if (txtBrandModel == null) {
        break missingId;
      }

      id = R.id.txtDescription;
      TextView txtDescription = ViewBindings.findChildViewById(rootView, id);
      if (txtDescription == null) {
        break missingId;
      }

      id = R.id.txtDescriptionLabel;
      TextView txtDescriptionLabel = ViewBindings.findChildViewById(rootView, id);
      if (txtDescriptionLabel == null) {
        break missingId;
      }

      id = R.id.txtKmCondition;
      TextView txtKmCondition = ViewBindings.findChildViewById(rootView, id);
      if (txtKmCondition == null) {
        break missingId;
      }

      id = R.id.txtPlate;
      TextView txtPlate = ViewBindings.findChildViewById(rootView, id);
      if (txtPlate == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      id = R.id.txtType;
      TextView txtType = ViewBindings.findChildViewById(rootView, id);
      if (txtType == null) {
        break missingId;
      }

      id = R.id.txtYearFuel;
      TextView txtYearFuel = ViewBindings.findChildViewById(rootView, id);
      if (txtYearFuel == null) {
        break missingId;
      }

      id = R.id.viewPagerImages;
      ViewPager viewPagerImages = ViewBindings.findChildViewById(rootView, id);
      if (viewPagerImages == null) {
        break missingId;
      }

      return new ActivityDetailsVehicleBinding((ConstraintLayout) rootView, btnDeleteVehicle,
          btnEditVehicle, binding_includeMainToolbar, txtBrandModel, txtDescription,
          txtDescriptionLabel, txtKmCondition, txtPlate, txtPrice, txtType, txtYearFuel,
          viewPagerImages);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
