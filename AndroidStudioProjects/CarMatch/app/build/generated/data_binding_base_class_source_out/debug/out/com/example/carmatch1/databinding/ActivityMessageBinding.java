// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carmatch1.R;
import com.google.android.material.appbar.MaterialToolbar;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityMessageBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextInputEditText editTextMessage;

  @NonNull
  public final FloatingActionButton floatingActionButton;

  @NonNull
  public final ImageView imagePhoto;

  @NonNull
  public final TextInputLayout inputLayoutMessage;

  @NonNull
  public final RecyclerView recyclerViewChat;

  @NonNull
  public final MaterialToolbar tb;

  @NonNull
  public final TextView txtUserName;

  private ActivityMessageBinding(@NonNull ConstraintLayout rootView,
      @NonNull TextInputEditText editTextMessage,
      @NonNull FloatingActionButton floatingActionButton, @NonNull ImageView imagePhoto,
      @NonNull TextInputLayout inputLayoutMessage, @NonNull RecyclerView recyclerViewChat,
      @NonNull MaterialToolbar tb, @NonNull TextView txtUserName) {
    this.rootView = rootView;
    this.editTextMessage = editTextMessage;
    this.floatingActionButton = floatingActionButton;
    this.imagePhoto = imagePhoto;
    this.inputLayoutMessage = inputLayoutMessage;
    this.recyclerViewChat = recyclerViewChat;
    this.tb = tb;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityMessageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_message, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityMessageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.editTextMessage;
      TextInputEditText editTextMessage = ViewBindings.findChildViewById(rootView, id);
      if (editTextMessage == null) {
        break missingId;
      }

      id = R.id.floatingActionButton;
      FloatingActionButton floatingActionButton = ViewBindings.findChildViewById(rootView, id);
      if (floatingActionButton == null) {
        break missingId;
      }

      id = R.id.imagePhoto;
      ImageView imagePhoto = ViewBindings.findChildViewById(rootView, id);
      if (imagePhoto == null) {
        break missingId;
      }

      id = R.id.inputLayoutMessage;
      TextInputLayout inputLayoutMessage = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutMessage == null) {
        break missingId;
      }

      id = R.id.recyclerViewChat;
      RecyclerView recyclerViewChat = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewChat == null) {
        break missingId;
      }

      id = R.id.tb;
      MaterialToolbar tb = ViewBindings.findChildViewById(rootView, id);
      if (tb == null) {
        break missingId;
      }

      id = R.id.txtUserName;
      TextView txtUserName = ViewBindings.findChildViewById(rootView, id);
      if (txtUserName == null) {
        break missingId;
      }

      return new ActivityMessageBinding((ConstraintLayout) rootView, editTextMessage,
          floatingActionButton, imagePhoto, inputLayoutMessage, recyclerViewChat, tb, txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
