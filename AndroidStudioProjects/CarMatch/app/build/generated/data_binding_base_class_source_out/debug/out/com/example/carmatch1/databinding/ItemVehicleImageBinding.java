// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageButton;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carmatch1.R;
import com.google.android.material.card.MaterialCardView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVehicleImageBinding implements ViewBinding {
  @NonNull
  private final MaterialCardView rootView;

  @NonNull
  public final LinearLayout additionalInfoLayout;

  @NonNull
  public final ImageButton btnStartConversation;

  @NonNull
  public final ImageButton heartIcon;

  @NonNull
  public final TextView tvViewMore;

  @NonNull
  public final TextView userName;

  @NonNull
  public final TextView vehicleCondition;

  @NonNull
  public final TextView vehicleDescription;

  @NonNull
  public final TextView vehicleFuelType;

  @NonNull
  public final ImageView vehicleImages;

  @NonNull
  public final TextView vehicleKm;

  @NonNull
  public final TextView vehicleLocation;

  @NonNull
  public final TextView vehicleModel;

  @NonNull
  public final TextView vehiclePrice;

  @NonNull
  public final TextView vehicleYear;

  private ItemVehicleImageBinding(@NonNull MaterialCardView rootView,
      @NonNull LinearLayout additionalInfoLayout, @NonNull ImageButton btnStartConversation,
      @NonNull ImageButton heartIcon, @NonNull TextView tvViewMore, @NonNull TextView userName,
      @NonNull TextView vehicleCondition, @NonNull TextView vehicleDescription,
      @NonNull TextView vehicleFuelType, @NonNull ImageView vehicleImages,
      @NonNull TextView vehicleKm, @NonNull TextView vehicleLocation,
      @NonNull TextView vehicleModel, @NonNull TextView vehiclePrice,
      @NonNull TextView vehicleYear) {
    this.rootView = rootView;
    this.additionalInfoLayout = additionalInfoLayout;
    this.btnStartConversation = btnStartConversation;
    this.heartIcon = heartIcon;
    this.tvViewMore = tvViewMore;
    this.userName = userName;
    this.vehicleCondition = vehicleCondition;
    this.vehicleDescription = vehicleDescription;
    this.vehicleFuelType = vehicleFuelType;
    this.vehicleImages = vehicleImages;
    this.vehicleKm = vehicleKm;
    this.vehicleLocation = vehicleLocation;
    this.vehicleModel = vehicleModel;
    this.vehiclePrice = vehiclePrice;
    this.vehicleYear = vehicleYear;
  }

  @Override
  @NonNull
  public MaterialCardView getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVehicleImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVehicleImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vehicle_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVehicleImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.additionalInfoLayout;
      LinearLayout additionalInfoLayout = ViewBindings.findChildViewById(rootView, id);
      if (additionalInfoLayout == null) {
        break missingId;
      }

      id = R.id.btnStartConversation;
      ImageButton btnStartConversation = ViewBindings.findChildViewById(rootView, id);
      if (btnStartConversation == null) {
        break missingId;
      }

      id = R.id.heartIcon;
      ImageButton heartIcon = ViewBindings.findChildViewById(rootView, id);
      if (heartIcon == null) {
        break missingId;
      }

      id = R.id.tvViewMore;
      TextView tvViewMore = ViewBindings.findChildViewById(rootView, id);
      if (tvViewMore == null) {
        break missingId;
      }

      id = R.id.userName;
      TextView userName = ViewBindings.findChildViewById(rootView, id);
      if (userName == null) {
        break missingId;
      }

      id = R.id.vehicleCondition;
      TextView vehicleCondition = ViewBindings.findChildViewById(rootView, id);
      if (vehicleCondition == null) {
        break missingId;
      }

      id = R.id.vehicleDescription;
      TextView vehicleDescription = ViewBindings.findChildViewById(rootView, id);
      if (vehicleDescription == null) {
        break missingId;
      }

      id = R.id.vehicleFuelType;
      TextView vehicleFuelType = ViewBindings.findChildViewById(rootView, id);
      if (vehicleFuelType == null) {
        break missingId;
      }

      id = R.id.vehicleImages;
      ImageView vehicleImages = ViewBindings.findChildViewById(rootView, id);
      if (vehicleImages == null) {
        break missingId;
      }

      id = R.id.vehicleKm;
      TextView vehicleKm = ViewBindings.findChildViewById(rootView, id);
      if (vehicleKm == null) {
        break missingId;
      }

      id = R.id.vehicleLocation;
      TextView vehicleLocation = ViewBindings.findChildViewById(rootView, id);
      if (vehicleLocation == null) {
        break missingId;
      }

      id = R.id.vehicleModel;
      TextView vehicleModel = ViewBindings.findChildViewById(rootView, id);
      if (vehicleModel == null) {
        break missingId;
      }

      id = R.id.vehiclePrice;
      TextView vehiclePrice = ViewBindings.findChildViewById(rootView, id);
      if (vehiclePrice == null) {
        break missingId;
      }

      id = R.id.vehicleYear;
      TextView vehicleYear = ViewBindings.findChildViewById(rootView, id);
      if (vehicleYear == null) {
        break missingId;
      }

      return new ItemVehicleImageBinding((MaterialCardView) rootView, additionalInfoLayout,
          btnStartConversation, heartIcon, tvViewMore, userName, vehicleCondition,
          vehicleDescription, vehicleFuelType, vehicleImages, vehicleKm, vehicleLocation,
          vehicleModel, vehiclePrice, vehicleYear);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
