// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carmatch1.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVehicleImageBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView vehicleImageView;

  @NonNull
  public final TextView vehicleLocation;

  @NonNull
  public final TextView vehicleModel;

  @NonNull
  public final TextView vehiclePrice;

  private ItemVehicleImageBinding(@NonNull LinearLayout rootView,
      @NonNull ImageView vehicleImageView, @NonNull TextView vehicleLocation,
      @NonNull TextView vehicleModel, @NonNull TextView vehiclePrice) {
    this.rootView = rootView;
    this.vehicleImageView = vehicleImageView;
    this.vehicleLocation = vehicleLocation;
    this.vehicleModel = vehicleModel;
    this.vehiclePrice = vehiclePrice;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVehicleImageBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVehicleImageBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vehicle_image, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVehicleImageBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.vehicleImageView;
      ImageView vehicleImageView = ViewBindings.findChildViewById(rootView, id);
      if (vehicleImageView == null) {
        break missingId;
      }

      id = R.id.vehicleLocation;
      TextView vehicleLocation = ViewBindings.findChildViewById(rootView, id);
      if (vehicleLocation == null) {
        break missingId;
      }

      id = R.id.vehicleModel;
      TextView vehicleModel = ViewBindings.findChildViewById(rootView, id);
      if (vehicleModel == null) {
        break missingId;
      }

      id = R.id.vehiclePrice;
      TextView vehiclePrice = ViewBindings.findChildViewById(rootView, id);
      if (vehiclePrice == null) {
        break missingId;
      }

      return new ItemVehicleImageBinding((LinearLayout) rootView, vehicleImageView, vehicleLocation,
          vehicleModel, vehiclePrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
