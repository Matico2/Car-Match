// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carmatch1.R;
import com.google.android.material.textfield.TextInputEditText;
import com.google.android.material.textfield.TextInputLayout;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityChangePasswordBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button buttonCancel;

  @NonNull
  public final Button buttonChangePassword;

  @NonNull
  public final TextInputEditText editTextConfirmNewPassword;

  @NonNull
  public final TextInputEditText editTextCurrentPassword;

  @NonNull
  public final TextInputEditText editTextNewPassword;

  @NonNull
  public final ToolbarAppBinding includeToolbarApp;

  @NonNull
  public final TextInputLayout inputLayoutConfirmNewPassword;

  @NonNull
  public final TextInputLayout inputLayoutCurrentPassword;

  @NonNull
  public final TextInputLayout inputLayoutNewPassword;

  @NonNull
  public final ConstraintLayout main;

  private ActivityChangePasswordBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button buttonCancel, @NonNull Button buttonChangePassword,
      @NonNull TextInputEditText editTextConfirmNewPassword,
      @NonNull TextInputEditText editTextCurrentPassword,
      @NonNull TextInputEditText editTextNewPassword, @NonNull ToolbarAppBinding includeToolbarApp,
      @NonNull TextInputLayout inputLayoutConfirmNewPassword,
      @NonNull TextInputLayout inputLayoutCurrentPassword,
      @NonNull TextInputLayout inputLayoutNewPassword, @NonNull ConstraintLayout main) {
    this.rootView = rootView;
    this.buttonCancel = buttonCancel;
    this.buttonChangePassword = buttonChangePassword;
    this.editTextConfirmNewPassword = editTextConfirmNewPassword;
    this.editTextCurrentPassword = editTextCurrentPassword;
    this.editTextNewPassword = editTextNewPassword;
    this.includeToolbarApp = includeToolbarApp;
    this.inputLayoutConfirmNewPassword = inputLayoutConfirmNewPassword;
    this.inputLayoutCurrentPassword = inputLayoutCurrentPassword;
    this.inputLayoutNewPassword = inputLayoutNewPassword;
    this.main = main;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChangePasswordBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_change_password, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChangePasswordBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.buttonCancel;
      Button buttonCancel = ViewBindings.findChildViewById(rootView, id);
      if (buttonCancel == null) {
        break missingId;
      }

      id = R.id.buttonChangePassword;
      Button buttonChangePassword = ViewBindings.findChildViewById(rootView, id);
      if (buttonChangePassword == null) {
        break missingId;
      }

      id = R.id.editTextConfirmNewPassword;
      TextInputEditText editTextConfirmNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextConfirmNewPassword == null) {
        break missingId;
      }

      id = R.id.editTextCurrentPassword;
      TextInputEditText editTextCurrentPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextCurrentPassword == null) {
        break missingId;
      }

      id = R.id.editTextNewPassword;
      TextInputEditText editTextNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (editTextNewPassword == null) {
        break missingId;
      }

      id = R.id.includeToolbarApp;
      View includeToolbarApp = ViewBindings.findChildViewById(rootView, id);
      if (includeToolbarApp == null) {
        break missingId;
      }
      ToolbarAppBinding binding_includeToolbarApp = ToolbarAppBinding.bind(includeToolbarApp);

      id = R.id.inputLayoutConfirmNewPassword;
      TextInputLayout inputLayoutConfirmNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutConfirmNewPassword == null) {
        break missingId;
      }

      id = R.id.inputLayoutCurrentPassword;
      TextInputLayout inputLayoutCurrentPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutCurrentPassword == null) {
        break missingId;
      }

      id = R.id.inputLayoutNewPassword;
      TextInputLayout inputLayoutNewPassword = ViewBindings.findChildViewById(rootView, id);
      if (inputLayoutNewPassword == null) {
        break missingId;
      }

      ConstraintLayout main = (ConstraintLayout) rootView;

      return new ActivityChangePasswordBinding((ConstraintLayout) rootView, buttonCancel,
          buttonChangePassword, editTextConfirmNewPassword, editTextCurrentPassword,
          editTextNewPassword, binding_includeToolbarApp, inputLayoutConfirmNewPassword,
          inputLayoutCurrentPassword, inputLayoutNewPassword, main);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
