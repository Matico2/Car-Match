// Generated by view binder compiler. Do not edit!
package com.example.carmatch1.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.carmatch1.R;
import com.google.android.material.imageview.ShapeableImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemVehicleBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnAnnounce;

  @NonNull
  public final ShapeableImageView imgPhoto;

  @NonNull
  public final TextView txtBrand;

  @NonNull
  public final TextView txtModel;

  @NonNull
  public final TextView txtPrice;

  private ItemVehicleBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnAnnounce,
      @NonNull ShapeableImageView imgPhoto, @NonNull TextView txtBrand, @NonNull TextView txtModel,
      @NonNull TextView txtPrice) {
    this.rootView = rootView;
    this.btnAnnounce = btnAnnounce;
    this.imgPhoto = imgPhoto;
    this.txtBrand = txtBrand;
    this.txtModel = txtModel;
    this.txtPrice = txtPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemVehicleBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemVehicleBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_vehicle, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemVehicleBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnAnnounce;
      Button btnAnnounce = ViewBindings.findChildViewById(rootView, id);
      if (btnAnnounce == null) {
        break missingId;
      }

      id = R.id.imgPhoto;
      ShapeableImageView imgPhoto = ViewBindings.findChildViewById(rootView, id);
      if (imgPhoto == null) {
        break missingId;
      }

      id = R.id.txtBrand;
      TextView txtBrand = ViewBindings.findChildViewById(rootView, id);
      if (txtBrand == null) {
        break missingId;
      }

      id = R.id.txtModel;
      TextView txtModel = ViewBindings.findChildViewById(rootView, id);
      if (txtModel == null) {
        break missingId;
      }

      id = R.id.txtPrice;
      TextView txtPrice = ViewBindings.findChildViewById(rootView, id);
      if (txtPrice == null) {
        break missingId;
      }

      return new ItemVehicleBinding((ConstraintLayout) rootView, btnAnnounce, imgPhoto, txtBrand,
          txtModel, txtPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
